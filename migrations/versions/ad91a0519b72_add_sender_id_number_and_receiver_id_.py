"""Add sender_id_number and receiver_id_number to parcels

Revision ID: ad91a0519b72
Revises: 026c0e13e706
Create Date: 2025-09-08 10:02:05.620572

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad91a0519b72'
down_revision = '026c0e13e706'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 1) add as nullable first
    with op.batch_alter_table('parcels', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sender_id_number', sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column('receiver_id_number', sa.String(length=30), nullable=True))

    # 2) backfill existing rows
    op.execute("""
        UPDATE parcels
        SET sender_id_number = 'N/A'
        WHERE sender_id_number IS NULL
    """)
    op.execute("""
        UPDATE parcels
        SET receiver_id_number = 'N/A'
        WHERE receiver_id_number IS NULL
    """)

    # 3) make NOT NULL
    with op.batch_alter_table('parcels', schema=None) as batch_op:
        batch_op.alter_column('sender_id_number', nullable=False)
        batch_op.alter_column('receiver_id_number', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('parcels', schema=None) as batch_op:
        batch_op.drop_column('receiver_id_number')
        batch_op.drop_column('sender_id_number')

    # ### end Alembic commands ###
